package main

import (
	"fmt"
	"net/http"
)

func initTables() error {
	_, err := conn.Exec(`CREATE TABLE IF NOT EXISTS Films (
		id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
		name varchar(30) NOT NULL,
		description  varchar(1000),
		rating integer CHECK (rating >= 0 AND rating <= 10),
		release_date DATE
	);`)
	if err != nil {
		return err
	}
	_, err = conn.Exec(`CREATE TABLE IF NOT EXISTS Actors(
		id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
		name  varchar(30) NOT NULL,
		gender  varchar(30),
		birth_date DATE
	);`)
	if err != nil {
		return err
	}
	_, err = conn.Exec(`CREATE TABLE IF NOT EXISTS MovieCast(
		FilmID integer NOT NULL,
		ActorID integer NOT NULL,
		FOREIGN KEY (FilmID) REFERENCES Films (id),
		FOREIGN KEY (ActorID) REFERENCES Actors (id)
	);`)
	if err != nil {
		return err
	}
	_, err = conn.Exec(`CREATE TABLE IF NOT EXISTS Users(
		id 	integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
		login  varchar(50) NOT NULL,
		password  varchar(50) NOT NULL,
		admin boolean
	);`)
	if err != nil {
		return err
	}
	return nil
}

func checkForAutorization(r *http.Request, admin bool) error {
	user, pass, ok := r.BasicAuth()
	if !ok {
		return fmt.Errorf("Not authorized")
	}

	var id int
	sqlQuery := "SELECT id FROM Users WHERE login = $1 AND password = $2"
	if admin {
		sqlQuery += " AND admin = true"
	}

	err := conn.QueryRow(sqlQuery, user, pass).Scan(&id)
	if err != nil {
		return err
	}

	return nil
}
